package Bro_codes_java_reloaded;

import java.awt.*;
import java.awt.event.ActionEvent;

import javax.swing.*;


class KeyBindDemo {
	
	JFrame frame;
	JLabel label;
	
	Action upAction;
	Action downAction;
	Action leftAction;
	Action rightAction;
	
	KeyBindDemo(){
		
		frame= new JFrame("keybinding demo ");
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setSize(420,420);
		frame.setLayout(null);
		
		label = new JLabel();
		label.setBackground(Color.red);
		label.setBounds(100,100,100,100);
		label.setOpaque(true);
		
		upAction = new UpAction();
		downAction = new DownAction();
		leftAction = new LeftAction();
		rightAction = new RightAction();
		
		label.getInputMap().put(KeyStroke.getKeyStroke("UP"), "upAction");
		label.getActionMap().put("upAction", upAction);
		
		frame.add(label);
		frame.setVisible(true);
	}
	
	public class UpAction extends AbstractAction{
		
		@Override
		public void actionPerformed(ActionEvent e) {
			label.setLocation(label.getX(),label.getY()+10);
			
		}
	}
	public class DownAction extends AbstractAction{
		@Override
		public void actionPerformed(ActionEvent e) {
			label.setLocation(label.getX(),label.getY()-10);
			
		}
	}
	
	public class RightAction extends AbstractAction{
		@Override
		public void actionPerformed(ActionEvent e) {
			label.setLocation(label.getX()-10,label.getY());
			
		}
	}
	public class LeftAction extends AbstractAction{
		@Override
		public void actionPerformed(ActionEvent e) {
			label.setLocation(label.getX()+10,label.getY());
			
		}
	}
}

public class Sh_49_KeyBindings {
	public static void main(String[] args) {
		
		// Key Bindings = bind an Action to a KeyStoke
		//				don't require you to click a component to give it focus
		//				all Swing components  use Key bindings
		//				increased flexibility compared to keyListeners
		//				can assign key stroke to individual Swing components
		//				more difficult to utilize and set up .
			
		KeyBindDemo myObj = new KeyBindDemo();
		System.out.println("hu");
	}

}
